#!/bin/bash

. $(dirname "$0")/components.sh
. $(dirname "$0")/skipped-files.sh

filenames=$(git diff --name-only --cached)

# check if we must skip any check
is_skipped_file=false
for filename in $filenames; do
    for skipped_file in "${skipped_files[@]}"; do
	if [[ "$filename" =~ $skipped_file ]]; then
            is_skipped_file=true
            break
        else
            is_skipped_file=false
        fi
    done
    if [ "$is_skipped_file" = false ]; then
        break
    fi
done

if [ "$is_skipped_file" = true ]; then
    echo INFO: skipping commit msg check
    exit 0
fi

# check format
if ! [[ "$(head -1 $1)t sh" == *":"* ]]; then
	echo ERROR: commit msg subject must include component name
	exit 4
fi

msg_prefix=$(head -1 $1 | cut -d':' -f 1)
if ! [ ${components[$msg_prefix]+exist} ]; then
	printf -v components_string '%s/' "${!components[@]}"
	echo "ERROR: must use authorized component (${components_string%/})"
	exit 8
fi

# check prefixes
exceptions=( README.md )
for filename in $filenames; do
	if [[ ! " ${exceptions[@]} " =~ " $filename " ]]; then
		is_prefix_found=false
		IFS=', ' read -r -a prefixes <<< "${components[$msg_prefix]}"
		for prefix in "${prefixes[@]}"; do
			if [[ "$filename" == "$prefix"* ]]; then
				is_prefix_found=true
				break
			fi
		done
		if [ "$is_prefix_found" = false ]; then
			echo ERROR: $filename is not part of $msg_prefix component
			for component in "${!components[@]}"; do
				IFS=', ' read -r -a prefixes <<< "${components[$component]}"
				for prefix in "${prefixes[@]}"; do
					if [[ "$filename" == "$prefix"* ]]; then
						echo INFO: consider using $component as prefix
					fi
				done
			done
			exit 12
		fi
	fi
done
